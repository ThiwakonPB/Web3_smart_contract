// Right click on the script name and hit "Run" to execute

(async () => {
    try {
        import * as web3 from web3
        console.log('Running deployWithWeb3 script...')
        console.log('This is fine1')
        // const contractName = 'Owner' // Change this for other contract
        const constructorArgs = ["0x4E64373CAD46Ee4078126B9d7b1Bc2f1F1c61Dd2", 0, 1, 10, "0x4E64373CAD46Ee4078126B9d7b1Bc2f1F1c61Dd2", 10, 1638346670, 16383469999, 3000]    // Put constructor args (if any) here for your contract
    
        // // Note that the script needs the ABI which is generated from the compilation artifact.
        // // Make sure contract is compiled and artifacts are generated
        // const artifactsPath = `browser/contracts/artifacts/${contractName}.json` // Change this for different path

        // const metadata = JSON.parse(await remix.call('fileManager', 'getFile', artifactsPath))
        // console.log(metadata)
        const accounts = await web3.eth.getAccounts()
        console.log('This is fine2')

        let contract = new web3.eth.Contract([{"name":"BidAdded","inputs":[{"name":"_operator","type":"address","indexed":true},{"name":"_bidId","type":"uint256","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"BidIncreased","inputs":[{"name":"_operator","type":"address","indexed":true},{"name":"_bidId","type":"uint256","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"BidRemoved","inputs":[{"name":"_operator","type":"address","indexed":true},{"name":"_bidId","type":"uint256","indexed":true}],"anonymous":false,"type":"event"},{"name":"AuctionPaused","inputs":[],"anonymous":false,"type":"event"},{"name":"AuctionUnpaused","inputs":[],"anonymous":false,"type":"event"},{"name":"AuctionClosed","inputs":[],"anonymous":false,"type":"event"},{"name":"TokensMinted","inputs":[{"name":"_minTokenId","type":"uint256","indexed":false},{"name":"_mintedQty","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"BidPromoted","inputs":[{"name":"_bidId","type":"uint256","indexed":true},{"name":"_height","type":"int128","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"view","type":"function","name":"contractVersion","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":426},{"stateMutability":"view","type":"function","name":"getState","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":13776},{"stateMutability":"view","type":"function","name":"contractOwner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":2586},{"stateMutability":"view","type":"function","name":"minimumBid","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2616},{"stateMutability":"view","type":"function","name":"open","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":2646},{"stateMutability":"view","type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":2676},{"stateMutability":"view","type":"function","name":"startDate","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2706},{"stateMutability":"view","type":"function","name":"endDate","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2736},{"stateMutability":"view","type":"function","name":"extendedEnd","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2766},{"stateMutability":"view","type":"function","name":"extendingTime","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2796},{"stateMutability":"view","type":"function","name":"minTokenId","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2826},{"stateMutability":"view","type":"function","name":"maxTokenId","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2856},{"stateMutability":"view","type":"function","name":"tokenQty","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2886},{"stateMutability":"view","type":"function","name":"bidCount","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2916},{"stateMutability":"view","type":"function","name":"bidAverage","inputs":[],"outputs":[{"name":"","type":"int128"}],"gas":2946},{"stateMutability":"view","type":"function","name":"highestBidId","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":2976},{"stateMutability":"view","type":"function","name":"lowWinningBidId","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3006},{"stateMutability":"view","type":"function","name":"levels","inputs":[{"name":"arg0","type":"uint256"},{"name":"arg1","type":"uint256"}],"outputs":[{"name":"","type":"tuple","components":[{"name":"value","type":"uint256"},{"name":"prevBid","type":"uint256"},{"name":"nextBid","type":"uint256"}]}],"gas":7477},{"stateMutability":"view","type":"function","name":"bidders","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"tuple","components":[{"name":"lastSequence","type":"uint256"}]}],"gas":3383}])
        console.log('This is 3 ')
        contract = contract.deploy({
            data: "0x61058d56600436101561000d57610282565b60046000601c376f7fffffffffffffffffffffffffffffff604052600051346105845763a0a8e46081141561004b57620f4241610140526020610140f35b631865c57d81141561007157610062610140610302565b61014051610160526020610160f35b63ce606ee081141561008b57600054610140526020610140f35b63d3a863868114156100a557600254610140526020610140f35b63fcfff16f8114156100bf57600354610140526020610140f35b635c975abb8114156100d957600454610140526020610140f35b630b97bc868114156100f357600554610140526020610140f35b63c24a0f8b81141561010d57600654610140526020610140f35b6301f28d0381141561012757600754610140526020610140f35b6366894fc881141561014157600854610140526020610140f35b63ce6e23b281141561015b57600954610140526020610140f35b6391ba317a81141561017557600a54610140526020610140f35b631eac069181141561018f57600b54610140526020610140f35b63b40a56278114156101a957600c54610140526020610140f35b63ecdde1aa8114156101c357600d54610140526020610140f35b63cdb010a38114156101dd57600e54610140526020610140f35b63ebca29328114156101f757600f54610140526020610140f35b63aefb343481141561024357600360243560068110156105845702601060043560e05260c052604060c02001805461014052600181015461016052600281015461018052506060610140f35b63fcc8f793811415610280576004358060a01c610584578090506101405260116101405160e05260c052604060c020805461016052506020610160f35b505b60006000fd5b6101405160601b610180526101605161018051176101a0526101a0518152505660116101c05160e05260c052604060c02080546001818183011061058457808201905090508155506101c0516101405260116101c05160e05260c052604060c02054610160526102f96101e0610288565b6101e051815250565b6007544210156103175760016003541461031a565b60005b15610386576004541561033557600281525061039156610381565b600554421061037657600654600854808210610584578082039050905042101561036757600381525061039156610371565b6004815250610391565b610380565b6001815250610391565b5b610390565b6005815250610391565b5b56610140516101605160601c148152505661014051610160516040518111610584576101a05180820280607f1d8160801d14156105845780905090509050610140516101a05180820280607f1d8160801d1415610584578090509050905080820380607f1d8160801d14156105845780905090509050610180516040518111610584576101a05180820180607f1d8160801d1415610584578090509050905080801561058457820580607f1d8160801d1415610584578090509050905080820180607f1d8160801d141561058457809050905090508152505660006101c052600f546101e05261020060006064818352015b6101a0516102005112610495576104e8565b6101c0805160106101e05160e05260c052604060c0205481818301106105845780820190509050815250600260106101e05160e05260c052604060c02001546101e0528151600101808352811415610483575b505061014051610180516040518111610584576101a05180820280607f1d8160801d141561058457809050905090506101c05160405181116105845780820380607f1d8160801d141561058457809050905090506101605160405181116105845780801561058457820580607f1d8160801d1415610584578090509050905080820180607f1d8160801d14156105845780905090509050815250565b600080fd5b61000461058d0361000460003961000461058d036000f3",
            arguments: constructorArgs
        })
        
        const newContractInstance = await contract.send({
            from: accounts[0],
            gas: 1500000,
            gasPrice: '30000000000'
        })
        console.log('Contract deployed at address: ', newContractInstance.options.address)
    } catch (e) {
        console.log(e.message)
    }
  })()